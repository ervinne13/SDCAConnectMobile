__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = require(_dependencyMap[1], "./../../../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/var/www/mobile/SDCAConnectMobile/src/screens/login/index.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _nativeBase = require(_dependencyMap[2], "native-base");

  var _reactNative = require(_dependencyMap[3], "react-native");

  var _styles = require(_dependencyMap[4], "./styles");

  var _styles2 = _interopRequireDefault(_styles);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    Login: {
      displayName: "Login"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/var/www/mobile/SDCAConnectMobile/src/screens/login/index.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var Login = _wrapComponent("Login")(function (_Component) {
    _inherits(Login, _Component);

    function Login(props) {
      _classCallCheck(this, Login);

      var _this = _possibleConstructorReturn(this, (Login.__proto__ || Object.getPrototypeOf(Login)).call(this, props));

      _this.state = {
        server: 'http://sdca-connect.tk',
        username: null,
        password: null,
        isLoading: false,
        errorMessage: ''
      };

      _reactNative.AsyncStorage.getItem('@Connect:Server').then(function (server) {
        if (server) {
          _this.setState({
            server: server
          });
        }
      });

      console.log('server', _this.state.server);
      return _this;
    }

    _createClass(Login, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _nativeBase.Toast.toastInstance = null;
      }
    }, {
      key: "onLogin",
      value: function onLogin() {
        var url, params, response, responseJson;
        return regeneratorRuntime.async(function onLogin$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.setState({
                  isLoading: true
                });

                _reactNative.AsyncStorage.setItem('@Connect:Server', this.state.server);

                _context.prev = 2;
                url = this.state.server + '/api/v1/login';
                params = {
                  username: this.state.username,
                  password: this.state.password
                };
                console.log('Sending request to ' + url, params);
                _context.next = 8;
                return regeneratorRuntime.awrap(fetch(url, {
                  method: 'POST',
                  headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                  },
                  body: JSON.stringify(params)
                }));

              case 8:
                response = _context.sent;
                _context.next = 11;
                return regeneratorRuntime.awrap(response.json());

              case 11:
                responseJson = _context.sent;

                if (response.status == 200) {
                  if (responseJson.token) {
                    this.props.onLoginSuccess(responseJson);
                  }

                  this.setState({
                    errorMessage: ''
                  });
                } else {
                  if (responseJson.error) {
                    this.setState({
                      errorMessage: responseJson.error
                    });
                  } else {
                    console.error(responseJson);
                  }
                }

                _context.next = 19;
                break;

              case 15:
                _context.prev = 15;
                _context.t0 = _context["catch"](2);
                console.error(_context.t0);
                this.setState({
                  errorMessage: _context.t0
                });

              case 19:
                _context.prev = 19;
                this.setState({
                  isLoading: false
                });
                return _context.finish(19);

              case 22:
              case "end":
                return _context.stop();
            }
          }
        }, null, this, [[2, 15, 19, 22]]);
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        if (this.state.isLoading) {
          return _react3.default.createElement(
            _nativeBase.Container,
            {
              style: _styles2.default.container,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 105
              }
            },
            _react3.default.createElement(
              _nativeBase.Header,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 106
                }
              },
              _react3.default.createElement(
                _nativeBase.Body,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 107
                  }
                },
                _react3.default.createElement(
                  _nativeBase.Title,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 108
                    }
                  },
                  "Login"
                )
              ),
              _react3.default.createElement(_nativeBase.Right, {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 110
                }
              })
            ),
            _react3.default.createElement(
              _nativeBase.Content,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 113
                }
              },
              _react3.default.createElement(_nativeBase.Spinner, {
                color: "blue",
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 114
                }
              })
            )
          );
        } else {
          return _react3.default.createElement(
            _nativeBase.Container,
            {
              style: _styles2.default.container,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 120
              }
            },
            _react3.default.createElement(
              _nativeBase.Header,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 121
                }
              },
              _react3.default.createElement(
                _nativeBase.Body,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 122
                  }
                },
                _react3.default.createElement(
                  _nativeBase.Title,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 123
                    }
                  },
                  "Login"
                )
              ),
              _react3.default.createElement(_nativeBase.Right, {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 125
                }
              })
            ),
            _react3.default.createElement(
              _nativeBase.Content,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 128
                }
              },
              _react3.default.createElement(
                _nativeBase.Form,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 129
                  }
                },
                _react3.default.createElement(
                  _nativeBase.Item,
                  {
                    stackedLabel: true,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 130
                    }
                  },
                  _react3.default.createElement(
                    _nativeBase.Label,
                    {
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 131
                      }
                    },
                    "Server"
                  ),
                  _react3.default.createElement(_nativeBase.Input, {
                    onChangeText: function onChangeText(text) {
                      return _this2.setState({
                        server: text
                      });
                    },
                    value: this.state.server,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 132
                    }
                  })
                ),
                _react3.default.createElement(
                  _nativeBase.Item,
                  {
                    stackedLabel: true,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 136
                    }
                  },
                  _react3.default.createElement(
                    _nativeBase.Label,
                    {
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 137
                      }
                    },
                    "Username"
                  ),
                  _react3.default.createElement(_nativeBase.Input, {
                    onChangeText: function onChangeText(text) {
                      return _this2.setState({
                        username: text
                      });
                    },
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 138
                    }
                  })
                ),
                _react3.default.createElement(
                  _nativeBase.Item,
                  {
                    stackedLabel: true,
                    last: true,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 140
                    }
                  },
                  _react3.default.createElement(
                    _nativeBase.Label,
                    {
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 141
                      }
                    },
                    "Password"
                  ),
                  _react3.default.createElement(_nativeBase.Input, {
                    secureTextEntry: true,
                    onChangeText: function onChangeText(text) {
                      return _this2.setState({
                        password: text
                      });
                    },
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 142
                    }
                  })
                )
              ),
              _react3.default.createElement(
                _nativeBase.Button,
                {
                  success: true,
                  onPress: function onPress() {
                    return _this2.onLogin();
                  },
                  block: true,
                  style: {
                    margin: 15,
                    marginTop: 50
                  },
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 145
                  }
                },
                _react3.default.createElement(
                  _nativeBase.Text,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 153
                    }
                  },
                  "Sign In"
                )
              ),
              _react3.default.createElement(
                _nativeBase.Text,
                {
                  style: {
                    color: 'red',
                    margin: 'auto'
                  },
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 156
                  }
                },
                this.state.errorMessage
              )
            )
          );
        }
      }
    }]);

    return Login;
  }(_react2.Component));

  exports.default = Login;
});