__d(function (global, require, module, exports, _dependencyMap) {
  var castPath = require(_dependencyMap[0], './_castPath'),
      isArguments = require(_dependencyMap[1], './isArguments'),
      isArray = require(_dependencyMap[2], './isArray'),
      isIndex = require(_dependencyMap[3], './_isIndex'),
      isKey = require(_dependencyMap[4], './_isKey'),
      isLength = require(_dependencyMap[5], './isLength'),
      isString = require(_dependencyMap[6], './isString'),
      toKey = require(_dependencyMap[7], './_toKey');

  function hasPath(object, path, hasFunc) {
    path = isKey(path, object) ? [path] : castPath(path);
    var result,
        index = -1,
        length = path.length;

    while (++index < length) {
      var key = toKey(path[index]);

      if (!(result = object != null && hasFunc(object, key))) {
        break;
      }

      object = object[key];
    }

    if (result) {
      return result;
    }

    var length = object ? object.length : 0;
    return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isString(object) || isArguments(object));
  }

  module.exports = hasPath;
});