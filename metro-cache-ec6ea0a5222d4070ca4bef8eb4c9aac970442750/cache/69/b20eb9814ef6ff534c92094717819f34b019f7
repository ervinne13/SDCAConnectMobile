__d(function (global, require, module, exports, _dependencyMap) {
  var _TaskItem = require(_dependencyMap[0], "./TaskItem");

  var _TaskItem2 = _interopRequireDefault(_TaskItem);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  var Task = function Task() {
    var _this = this;

    var webTask = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Task);

    this.id = webTask.id;
    this.randomizesTasks = webTask.randomizes_tasks == 1;
    this.timeLimitMinutes = webTask.time_limit_minutes || 0;
    this.typeCode = webTask.type_code;
    this.displayName = webTask.display_name;
    this.description = webTask.description;
    this.createdAt = new Date(webTask.created_at);
    this.updatedAt = new Date(webTask.updated_at);
    this.items = [];
    webTask.items.forEach(function (item) {
      _this.items.push(new _TaskItem2.default(item));
    });
  };

  Task.schema = {
    name: 'Task',
    primaryKey: 'id',
    properties: {
      id: {
        type: 'int',
        indexed: true
      },
      randomizesTasks: {
        type: 'bool'
      },
      timeLimitMinutes: {
        type: 'int'
      },
      typeCode: {
        type: 'string'
      },
      displayName: {
        type: 'string'
      },
      description: {
        type: 'string'
      },
      items: {
        type: 'list',
        objectType: 'TaskItem'
      },
      createdAt: {
        type: 'date'
      },
      updatedAt: {
        type: 'date'
      }
    }
  };
  module.exports = Task;
});